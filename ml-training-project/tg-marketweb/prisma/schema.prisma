// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String    @db.VarChar(50)
  email              String    @unique @db.VarChar(120)
  password           String    @db.VarChar(200)
  resetCode          String?   @unique @db.VarChar(20)
  resetCodeExpiresAt DateTime?
  token              String?   @db.VarChar(200)
  isVendor           Boolean   @default(false)
  createdAt          DateTime  @default(now())
  Vendor             Vendor[]
  Cart               Cart[]
  Order              Order[]
}

model Vendor {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(50)
  description String    @db.VarChar(200)
  email       String    @unique
  phone       String?   @db.VarChar(20)
  department  String?   @db.VarChar(50)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user_id     Int
  user        User      @relation(fields: [user_id], references: [id])
  Product     Product[]
  Order       Order[]
  Cart        Cart[]
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(50)
  description  String         @db.VarChar(200)
  price        Decimal        @db.Decimal(10, 2)
  stock        Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  vendor_id    Int
  vendor       Vendor         @relation(fields: [vendor_id], references: [id])
  Cart         Cart[]
  orderItem    OrderItem[]
  ProductImage ProductImage[]
}

model Cart {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  vendor_id  Int
  price      Decimal  @db.Decimal(10, 2)
  quantity   Int
  total      Decimal  @db.Decimal(10, 2)
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
  product    Product  @relation(fields: [product_id], references: [id])
  vendor     Vendor   @relation(fields: [vendor_id], references: [id])
}

model Order {
  id              Int         @id @default(autoincrement())
  user_id         Int
  vendor_id       Int
  total           Decimal     @db.Decimal(10, 2)
  status          String      @db.VarChar(20)
  delivery_status String      @db.VarChar(20)
  payment_method  String      @db.VarChar(20)
  payment_status  String      @db.VarChar(20)
  cancelled       Boolean     @default(false)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user            User        @relation(fields: [user_id], references: [id])
  vendor          Vendor      @relation(fields: [vendor_id], references: [id])
  OrderItem       OrderItem[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int
  total      Decimal @db.Decimal(10, 2)
  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  product_id Int
  image_url  String
  createdAt  DateTime @default(now())
  width      Int
  height     Int
  product    Product  @relation(fields: [product_id], references: [id])
}
